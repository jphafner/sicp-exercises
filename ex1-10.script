Script started on Wed 06 Apr 2016 11:33:31 PM EDT
[jphafner@hedonism sicp-exercises]$ guile
GNU Guile 2.0.11
Copyright (C) 1995-2014 Free Software Foundation, Inc.

Guile comes with ABSOLUTELY NO WARRANTY; for details type `,show w'.
This program is free software, and you are welcome to redistribute it
under certain conditions; type `,show c' for details.

Enter `,help' for help.
scheme@(guile-user)> (load "ex-1-10.scm")
;;; note: source file /home/jphafner/Projects/sicp-exercises/ex1-10.scm
;;;       newer than compiled /home/jphafner/.cache/guile/ccache/2.0-LE-8-2.0/home/jphafner/Projects/sicp-exercises/ex1-10.scm.go
;;; note: auto-compilation is enabled, set GUILE_AUTO_COMPILE=0
;;;       or pass the --no-auto-compile argument to disable.
;;; compiling /home/jphafner/Projects/sicp-exercises/ex1-10.scm
;;; compiled /home/jphafner/.cache/guile/ccache/2.0-LE-8-2.0/home/jphafner/Projects/sicp-exercises/ex1-10.scm.go
scheme@(guile-user)> (A 1 10)
$1 = 1024
scheme@(guile-user)> (A 2 4)
$2 = 65536
scheme@(guile-user)> (A 3 3)
$3 = 65536
scheme@(guile-user)> (f 3)
$4 = 6
scheme@(guile-user)> (g 3)
$5 = 8
scheme@(guile-user)> (h 3)
$6 = 16
scheme@(guile-user)> (g 3)
$7 = 45
scheme@(guile-user)> (f 4)
$8 = 8
scheme@(guile-user)> (g 4)
$9 = 16
scheme@(guile-user)> (h 4)
$10 = 65536
scheme@(guile-user)> (k 4)
$11 = 80
scheme@(guile-user)> 
[jphafner@hedonism sicp-exercises]$ exit

Script done on Wed 06 Apr 2016 11:34:49 PM EDT


## (h n) = (* 2 n)
(h n)
(A 0 n)
(* 2 n)


## (g n) = (^ 2 n)
(g n)
(A 1 n)
(A (- 1 1) (A 1 (- n 1)))
(A 0       (A 1 (- n 1)))
(A 0       (A (- 1 1) (A 1 (- (- n 1) 1))))
(A 0       (A 0       (A 1 (- n 2))))
(A 0       (A 0       (A (- 1 1) (A 1 (- (- n 2) 1)))))
(A 0       (A 0       (A 0       (A 1 (- n 3)))))
## let n-3=1
(A 0       (A 0       (A 0       (A 1 1))))
(A 0       (A 0       (A 0       2)))
(A 0       (A 0       (* 2 2)))
(A 0       (A 0       4))
(A 0       (* 2 4))
(A 0       8)
(* 2 8)
16


(h 0) = 0  = 0
(h 1) = 2  = 2^1
(h 2) = 4  = 2^2
(h 3) = 16 = 2^4
(h 4) = 65536 = 2^16
(h 5) = too large

(h n) = (^ 2 (h n-1))


## (h n) = ( )
(A 2 n)
(A (- 2 1) (A 2 (- n 1)))
(A 1       (A 2 (- n 1)))
(A 1       (A (- 2 1) (A 2 (- (- n 1) 1))))
(A 1       (A 1       (A 2 (- n 2))))


## The break down

##  (A 2 4)
##  (A (- 2 1) (A 2 (- 4 1)))
##  (A 1       (A 2 3))
##  (A 1       (A (- 2 1) (A 2 (- 3 1))))
##  (A 1       (A 1       (A 2 2)))
##  (A 1       (A 1       (A (- 2 1) (A 2 (- 2 1))))
##  (A 1       (A 1       (A 1       (A 2 1))))
##  (A 1       (A 1       (A 1       2)))
##  (A 1       (A 1       (A (- 1 1) (A 1 (- 2 1)))))
##  (A 1       (A 1       (A 0       (A 1 1))))
##  (A 1       (A 1       (A 0       2)))
##  (A 1       (A 1       (* 2 2)))
##  (A 1       (A 1       4))
##  (A 1       (A (- 1 1) (A 1 (- 4 1))))
##  (A 1       (A 0       (A 1 3     )))
##  (A 1       (A 0       (A 1 3     )))


