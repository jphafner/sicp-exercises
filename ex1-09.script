Script started on Wed 06 Apr 2016 11:04:51 PM EDT
[jphafner@hedonism sicp-exercises]$ guile
GNU Guile 2.0.11
Copyright (C) 1995-2014 Free Software Foundation, Inc.

Guile comes with ABSOLUTELY NO WARRANTY; for details type `,show w'.
This program is free software, and you are welcome to redistribute it
under certain conditions; type `,show c' for details.

Enter `,help' for help.
scheme@(guile-user)> (load ("ex1-9.scm")
;;; note: source file /home/jphafner/Projects/sicp-exercises/ex1-9.scm
;;;       newer than compiled /home/jphafner/.cache/guile/ccache/2.0-LE-8-2.0/home/jphafner/Projects/sicp-exercises/ex1-9.scm.go
;;; note: auto-compilation is enabled, set GUILE_AUTO_COMPILE=0
;;;       or pass the --no-auto-compile argument to disable.
;;; compiling /home/jphafner/Projects/sicp-exercises/ex1-9.scm
;;; compiled /home/jphafner/.cache/guile/ccache/2.0-LE-8-2.0/home/jphafner/Projects/sicp-exercises/ex1-9.scm.go
scheme@(guile-user)> (iterative 10 20)
$1 = 30
scheme@(guile-user)> (recursive 10 20)
$2 = 30
scheme@(guile-user)> (iterative 5 10)
$3 = 15
scheme@(guile-user)> (recursive 5 10)
$4 = 15
scheme@(guile-user)> 
[jphafner@hedonism sicp-exercises]$ exit

Script done on Wed 06 Apr 2016 11:14:47 PM EDT


## The break down


## (recursive a b)
##                (inc (re (dec a) b))
##           (inc (inc (re (dec a-1) b)))
##      (inc (inc (inc (re (dec a-2) b))))
## (inc (inc (inc (inc (re (dec a-3) b)))))
## ... until a-x = 0


## (iterative a b)
## (it (dec a) (inc b)))
## (it (dec a-1) (inc b+1))
## (it (dec a-2) (inc b+2))
## (it (dec a-3) (inc b+3))
## ... until a-x = 0


